{"remainingRequest":"/Users/umutdemirtas/Desktop/vue-router-advanced/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/umutdemirtas/Desktop/vue-router-advanced/src/components/UserPosts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/umutdemirtas/Desktop/vue-router-advanced/src/components/UserPosts.vue","mtime":1619608773801},{"path":"/Users/umutdemirtas/Desktop/vue-router-advanced/node_modules/cache-loader/dist/cjs.js","mtime":1618355482683},{"path":"/Users/umutdemirtas/Desktop/vue-router-advanced/node_modules/babel-loader/lib/index.js","mtime":1618355482750},{"path":"/Users/umutdemirtas/Desktop/vue-router-advanced/node_modules/cache-loader/dist/cjs.js","mtime":1618355482683},{"path":"/Users/umutdemirtas/Desktop/vue-router-advanced/node_modules/vue-loader/lib/index.js","mtime":1618355489757}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsgCiAgICBuYW1lIDogJ1VzZXJQb3N0cycsCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHBvc3RzOiB7fQogICAgICAgIH0KICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIHVzZXJMaW5rKCkgewogICAgICAgICAgICByZXR1cm4gYC91c2VyLyR7dGhpcy4kcm91dGUucGFyYW1zLnVzZXJJZH1gCiAgICAgICAgfSwKICAgICAgICB1c2Vyc0xpbmsoKXsKICAgICAgICAgICAgcmV0dXJuIGAvYAogICAgICAgIH0KICAgIH0sCiAgICBjcmVhdGVkKCl7CiAgICAgICAgZmV0Y2goYGh0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS9wb3N0cz91c2VySWQ9JHt0aGlzLiRyb3V0ZS5wYXJhbXMudXNlcklkfWApCiAgICAgICAgLnRoZW4oKHJlcykgPT4ge3JldHVybiByZXMuanNvbigpfSkKICAgICAgICAudGhlbigoZGF0YSkgPT4ge3RoaXMucG9zdHMgPSBkYXRhIDt9KQogICAgICAgIH0sIAp9Cg=="},{"version":3,"sources":["UserPosts.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserPosts.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <router-link :to=\"userLink\">Back User</router-link> <br>\n        <router-link :to=\"usersLink\">Users Page</router-link>\n        <div v-for=\"post in posts\" :key=\"post\">\n         <h4>{{post.title}}</h4>\n        <p>{{post.body}}</p>\n        <hr>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default { \n    name : 'UserPosts',\n    data() {\n        return {\n            posts: {}\n        }\n    },\n    computed: {\n        userLink() {\n            return `/user/${this.$route.params.userId}`\n        },\n        usersLink(){\n            return `/`\n        }\n    },\n    created(){\n        fetch(`https://jsonplaceholder.typicode.com/posts?userId=${this.$route.params.userId}`)\n        .then((res) => {return res.json()})\n        .then((data) => {this.posts = data ;})\n        }, \n}\n</script>"]}]}